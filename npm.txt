// create package.json
npm init

// no promp, use defaults
npm init --yes

// set defaults
npm config set init.author.name YOUR_NAME


// install everything from package.json
npm install

// install only dependencies not devDependencies
npm install --production

// install only dependencies not devDependencies
NODE_ENV=production npm install

// install localy, save to dependencies
npm install package --save

// install localy, cave to devDependencies
npm install package --save-dev

// install globaly
npm install package -g

// uninstall package
npm uninstall package

// uninstall global package
npm uninstall package -g

// to uninstall everything remove node_modules
rm -rf ./node_modules


// list packages in current dir
npm ls

// list global packages
npm ls -g

// list local outdated packages
npm outdated

// list global outdated packages
npm outdated -g


// create npm-shrinkwrap.json
npm shrinkwrap

// also include devDependencies
npm shrinkwrap --dev


// open package home site
npm hom package

// open package site with issue
npm bugs package

// open package repo
npm repo package


// use for own npm modules
// creates symlink from global scope to current folder
npm link

// create link from node_modules to global scope,
// so can try unpublished changes in own npm module
npm link package_name


// run scipt from 'scripts' in package.json
npm run script


1.2.3       // match match exactly
~1.2.3      // only last can increase (1.2.x)
^1.2.3      // last and middle can increase (1.x.x)
>1.2.3      // must be greater than, same for (>=, <, <=)
latest      // always latest release
*           // match any version

first-number    // major change, incompatible api change
second-number   // minor change, add some api
last-number     // patch


OTHER
- .npmignore if present overrides .gitignore

